{"version":3,"sources":["redux/quote-machine/quote-machine.types.js","redux/background-page/background-page.types.js","data/quotes.data.js","utils/functions.js","components/quote-box.component.jsx","redux/quote-machine/quote-machine.actions.js","redux/background-page/background-page.actions.js","App.js","reportWebVitals.js","redux/quote-machine/quote-machine.reducer.jsx","redux/background-page/background-page.reducer.jsx","redux/root-reducer.js","redux/store.js","index.js"],"names":["QuoteMachineActionTypes","CHANGE_QUOTE","backgroundPageActionTypes","CHANGE_BACKGROUND_COLOR","quotesData","id","text","author","tweetUrl","completeQuote","replaceAll","pickRandomColor","backgroundColor","getRandomColor","transition","color","i","Math","floor","random","connect","state","listOfQuotes","quote","listOfColors","page","dispatch","changeQuote","nextQuote","type","payload","changeBackgroundColor","nextColor","currentQuote","quotes","useState","setCompleteQuote","className","map","Button","variant","onClick","num","number","size","length","generateRandomNumber","shareQuote","find","href","target","currentColor","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","quoteMachineReducer","action","backgroundPageReducer","rootReducer","combineReducers","QuoteMachineReducer","middlewares","logger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.308a08b9.chunk.js","sourcesContent":["const QuoteMachineActionTypes = {\r\n    CHANGE_QUOTE: 'CHANGE_QUOTE'\r\n}\r\n\r\nexport default QuoteMachineActionTypes;","const backgroundPageActionTypes = {\r\n    CHANGE_BACKGROUND_COLOR: 'CHANGE_BACKGROUND_COLOR'\r\n}\r\n\r\nexport default backgroundPageActionTypes;","const quotesData = [\r\n    {\r\n        id: 1,\r\n        text: \"No hay que ir para atrás ni para darse impulso\",\r\n        author: \"Lao Tsé\"\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"No hay caminos para la paz; la paz es el camino\",\r\n        author: \"Mahatma Gandhi\"\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Haz el amor y no la guerra\",\r\n        author: \"John Lennon\"\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Para trabajar basta estar convencido de una cosa: que trabajar es menos aburrido que divertirse\",\r\n        author: \"Charles Baudelaire\"\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Lo peor que hacen los malos es obligarnos a dudar de los buenos\",\r\n        author: \"Jacinto Benavente\"\r\n    },\r\n    {\r\n        id: 6,\r\n        text: \"Las guerras seguirán mientras el color de la piel siga siendo más importante que el de los ojos\",\r\n        author: \"Bob Marley\"\r\n    },\r\n    {\r\n        id: 7,\r\n        text: \"Aprende a vivir y sabrás morir bien\",\r\n        author: \"Confucio\"\r\n    },\r\n    {\r\n        id: 8,\r\n        text: \"Cada día sabemos más y entendemos menos\",\r\n        author: \"Albert Einstein\"\r\n    },\r\n    {\r\n        id: 9,\r\n        text: \"El mundo no está en peligro por las malas personas sino por aquellas que permiten la maldad\",\r\n        author: \"Albert Einstein\"\r\n    },\r\n    {\r\n        id: 10,\r\n        text: \"La medida del amor es amar sin medida\",\r\n        author: \"San Agustín\"\r\n    },\r\n    {\r\n        id: 11,\r\n        text: \"Dar el ejemplo no es la principal manera de influir sobre los demás; es la única manera\",\r\n        author: \"Albert Einstein\"\r\n    },\r\n    {\r\n        id: 12,\r\n        text: \"Si es bueno vivir, todavía es mejor soñar, y lo mejor de todo, despertar\",\r\n        author: \"Antonio Machado\"\r\n    },\r\n    {\r\n        id: 13,\r\n        text: \"La mayor declaración de amor es la que no se hace; el hombre que siente mucho, habla poco\",\r\n        author: \"Platón\"\r\n    },\r\n    {\r\n        id: 14,\r\n        text: \"Ningún hombre es lo bastante bueno para gobernar a otros sin su consentimiento\",\r\n        author: \"Abraham Lincoln\"\r\n    },\r\n    {\r\n        id: 15,\r\n        text: \"Vivir sola es como estar en una fiesta donde nadie te hace caso\",\r\n        author: \"Marilyn Monroe\"\r\n    }\r\n];\r\n\r\nexport default quotesData;","import quotesData from '../data/quotes.data';\r\n\r\nexport const pickRandomProperty = (obj) => {\r\n    var result;\r\n    var count = 0;\r\n    for (var prop in obj)\r\n        if (Math.random() < 1/++count)\r\n           result = prop;\r\n    return result;\r\n}\r\n\r\nexport const tweetUrl = (completeQuote) => {\r\n    var author = completeQuote.author.replaceAll(\" \", \"%20\");\r\n    var text = completeQuote.text.replaceAll(\" \", \"%20\");\r\n    var url = \"https://twitter.com/intent/tweet?text=\" + text + '%20-%20' + author;\r\n    return url;\r\n}\r\n\r\nexport const generateRandomNumber = (number) => {\r\n    var size = quotesData.length;\r\n    var num = Math.floor((Math.random() * (size))+1);\r\n        while (num === number){\r\n            num = Math.floor((Math.random() * (size))+1);\r\n        }\r\n    return num;    \r\n}\r\n\r\nexport const pickRandomColor = () => {\r\n    return {\r\n        backgroundColor: `${getRandomColor()}`,\r\n        transition:'background-color 1s ease-out'\r\n    }\r\n}\r\n\r\nexport const getRandomColor = () => {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './quote-box.styles.scss';\r\nimport {changeQuote} from '../redux/quote-machine/quote-machine.actions';\r\nimport Button from '@material-ui/core/Button';\r\nimport {changeBackgroundColor} from '../redux/background-page/background-page.actions';\r\nimport {pickRandomColor, generateRandomNumber} from '../utils/functions';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport {tweetUrl} from '../utils/functions'\r\n\r\nconst QuoteBox = ({listOfQuotes, changeQuote, changeBackgroundColor}) => {\r\n    const {currentQuote, quotes} = listOfQuotes;\r\n    const [completeQuote, setCompleteQuote] = useState({id:1, text: \"No hay que ir para atrás ni para darse impulso\", author: \"Lao Tsé\"});\r\n\r\n    return(\r\n        <div className='quote-box'>\r\n            <div className='quote-text'>\r\n                {\r\n                    quotes.map(quote =>\r\n                        quote.id === currentQuote ? <p>\"{quote.text}\"</p>: <p></p>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className='author-text'>\r\n                {\r\n                    quotes.map(quote =>\r\n                        quote.id === currentQuote ? <p><b>{quote.author}</b></p>: <p></p>)\r\n                }\r\n            </div>\r\n            <Button variant='contained' color='primary' className='change-button'\r\n            onClick={() => {\r\n                var num = generateRandomNumber(currentQuote)\r\n                changeQuote(num);\r\n                var shareQuote = quotes.find(quote => quote.id === num);\r\n                setCompleteQuote(shareQuote);\r\n                changeBackgroundColor(pickRandomColor())}}>\r\n                Cambia!\r\n            </Button>\r\n            <Button variant='contained' color='secondary' className='share-button' href={`${tweetUrl(completeQuote)}`} target=\"_blank\">\r\n                <TwitterIcon />\r\n            </Button>        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        listOfQuotes: state.quote,\r\n        listOfColors: state.page\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeQuote: nextQuote => dispatch(changeQuote(nextQuote)),\r\n    changeBackgroundColor: nextColor => dispatch(changeBackgroundColor(nextColor))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteBox);","import QuoteMachineActionTypes from './quote-machine.types';\r\n\r\nexport const changeQuote = (nextQuote) => ({\r\n    type: QuoteMachineActionTypes.CHANGE_QUOTE,\r\n    payload: nextQuote\r\n})","import backgroundPageActionTypes from './background-page.types';\r\n\r\nexport const changeBackgroundColor = (nextColor) => ({\r\n    type: backgroundPageActionTypes.CHANGE_BACKGROUND_COLOR,\r\n    payload: nextColor\r\n});","import './App.css';\nimport QuoteBox from './components/quote-box.component';\nimport {connect} from 'react-redux'\n\n\nconst App = ({page}) => {\n  const {currentColor} = page;\n  return (\n    <div style={currentColor} className='container'>\n      <QuoteBox />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    page: state.page\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import QuoteMachineActionTypes from './quote-machine.types';\r\nimport quotesData from '../../data/quotes.data';\r\n\r\nconst INITIAL_STATE = {\r\n    quotes: quotesData,\r\n    currentQuote: 1\r\n};\r\n\r\nconst quoteMachineReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case QuoteMachineActionTypes.CHANGE_QUOTE:\r\n            return {\r\n                ...state,\r\n                currentQuote: action.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n};\r\n\r\nexport default quoteMachineReducer;\r\n\r\n","import backgroundPageActionTypes from './background-page.types'\r\nimport {pickRandomColor} from '../../utils/functions';\r\n\r\nconst INITIAL_STATE = {\r\n    currentColor: pickRandomColor()\r\n};\r\n\r\nconst backgroundPageReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case backgroundPageActionTypes.CHANGE_BACKGROUND_COLOR:\r\n            return {\r\n                ...state,\r\n                currentColor: action.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n}\r\n\r\nexport default backgroundPageReducer;","import {combineReducers} from 'redux';\r\nimport QuoteMachineReducer from './quote-machine/quote-machine.reducer';\r\nimport backgroundPageReducer from './background-page/background-page.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    quote: QuoteMachineReducer,\r\n    page: backgroundPageReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}